'use strict';

var FIREBASE_URL = 'https://eamdb.firebaseio.com/';
var fb = new Firebase(FIREBASE_URL);
var movies; // instantiates a var for appending children to the dom
var omdb_URL = 'http://www.omdbapi.com/?';
var $searchForm = $('.search-form');
var $searchBar = $('input[name=search]')[0];
var $movieDetails = $('.movie-details');
var $table = $('table');
var initLoad = true;
var authData = fb.getAuth();
var initLoad = true;
$('.onLoggedIn form').submit(function () {
  //when logged in, this is the form where users can write the urls to their photos
  var url = $('.onLoggedIn input[type="url"]').val(); //this is the text box where people can insert their urls
  movies.push(url, function (err) {
    //posts the photo to firebase
    console.log(err);
  });
  event.preventDefault();
});
$('.onTempPassword form').submit(function () {
  //function for getting a temporary password
  var email = fb.getAuth().password.email; //making sure the email address exists
  var oldPw = $('.onTempPassword input:nth-child(1)').val(); //the temporary password
  var newPw = $('.onTempPassword input:nth-child(2)').val(); //the new user-generated password
  fb.changePassword({
    email: email,
    oldPassword: oldPw,
    newPassword: newPw
  }, function (err) {
    if (err) {
      alert(err.toString());
    } else {
      fb.unauth();
    }
  });
  event.preventDefault();
});
//resetting a password
$('.doResetPassword').click(function () {
  var email = $('.onLoggedOut input[type="email"]').val();
  fb.resetPassword({
    email: email
  }, function (err) {
    if (err) {
      alert(err.toString());
    } else {
      alert('Check your email!');
    }
  });
});
$('.goToMovies').click(function () {
  window.location = 'movies.html';
});
$('.doLogout').click(function () {
  fb.unauth(function () {
    // window.location.reload();
    window.location.href = window.location.href;
  });
});
//registering a new user
$('.doRegister').click(function () {
  var email = $('.onLoggedOut input[type="email"]').val();
  var password = $('.onLoggedOut input[type="password"]').val();
  fb.createUser({
    email: email,
    password: password
  }, function (err, userData) {
    if (err) {
      alert(err.toString());
    } else {
      clearForms();
      doLogin(email, password, function () {
        window.location.href = window.location.href;
      });
    }
  });
  event.preventDefault();
});
//if logged out, this form comes up and can log users in
$('.onLoggedOut form').submit(function () {
  var email = $('.onLoggedOut input[type="email"]').val();
  var password = $('.onLoggedOut input[type="password"]').val();
  doLogin(email, password, function () {
    // window.location.reload();
    window.location.href = window.location.href;
  });
  event.preventDefault();
});
//this function inserts empty strings into forms upon being called
function clearForms() {
  $('input[type="text"], input[type="url"]').val('');
}
function saveAuthData(authData) {
  //gives you the authData object to work with
  var ref = fb.child('users/' + authData.uid + '/profile');
  ref.set(authData);
  console.log(authData);
}
function doLogin(email, password, cb) {
  fb.authWithPassword({
    email: email,
    password: password
  }, function (err, authData) {
    if (err) {
      alert(err.toString());
    } else {
      saveAuthData(authData);
      typeof cb === 'function' && cb(authData);
    }console.log(authData);
  });
}
/*
***********************************
*********** FROM HERE
***********************************
function addMovieToDom (photo) {
  if (photo) {
    var uuid = Object.keys(photo)[0];
    $(`<img src="${photo[uuid]}" data-uid="${uuid}">`).appendTo($('.favFotos'));
  }
}*/

//function to get firebase data and add to table on page load
//$.get(FIREBASE_URL, function (data) {
$.get(authData, function (data) {
  console.log(authData);
  if (data === null) {
    $table.hide(); //hides table if firebase is empty
  } else {
    Object.keys(data).forEach(function (id) {
      addTableDetail(data[id], id);
    });
    console.log(data);
  }
});
//function to retrieve movie JSON file and add to html //// THIS WORKS
$searchForm.on('submit', function () {
  var movie = $searchBar.value;
  var url = omdb_URL + 't=' + movie + '&r=json';
  console.log(url); //  THIS WORKED
  $.get(url, function (data) {
    addMovieDetail(data);
  });
  return false;
});
//function to add JSON data to html //// THIS WORKS
function addMovieDetail(data) {
  var $target = $('.movie-details');
  if (data.Title === undefined) {
    $target.empty();
    $target.append('<h2>Sorry, never heard of it!</h2>');
  } else {
    var poster = data.Poster === 'N/A' ? 'http://i.imgur.com/rXuQiCm.jpg?1' : data.Poster;
    $target.empty();
    $target.append('<img src=' + poster + '></img>');
    $target.append('<h1>' + data.Title + '</h1>');
    $target.append('<h2> Year: ' + data.Year + '</h2>');
    $target.append('<h2> IMDB Rating: ' + data.imdbRating + '</h2>');
    $target.append('<button class=\'btn btn-default btn-xs add-movie\'>Add Movie</button>');
  }
}
//posts movie object to firebase and calls addTableDetail()
$movieDetails.on('click', '.add-movie', function () {
  //note: must be in this format because the .add-movie button is dynamically created
  var movie = $searchBar.value;
  var url = omdb_URL + 't=' + movie + '&r=json';
  var token = fb.getAuth().token;
  console.log(url); //  this worked
  var ref = FIREBASE_URL + 'users/' + authData.uid + '/movies.json?auth=' + authData.token;
  console.log(ref); //  works
  $.get(url, function (data) {
    $.post(ref, JSON.stringify(data), function (res) {
      addTableDetail(data, res.name);
      console.log(addTableDetail); ///////// This works. Holy fuck.
    });
  }, 'jsonp');
});
//function to append a row to the table
function addTableDetail(data, id) {
  $table.show();
  $table.append('<tr class=\'hide-rows\'></tr>');
  var $target = $('tr:last');
  console.log('did this show up?'); //does not fucking work
  $target.attr('data-id', id);
  var poster = data.Poster === 'N/A' ? 'http://i.imgur.com/rXuQiCm.jpg?1' : data.Poster;
  $target.append('<td class="poster"><img src=' + poster + '></img></td>');
  $target.append('<td class="title">' + data.Title + '</td>');
  $target.append('<td class="year">' + data.Year + '</td>');
  $target.append('<td class="rating">' + data.imdbRating + '</td>');
  $target.append('<td><button class=\'btn btn-default btn-xs\'>' + '&nbsp;X&nbsp;' + '</button></td>');
}
//deletes row from table and firebase
$table.on('click', 'button', function () {
  var $movie = $(this).closest('tr');
  var $id = $movie.attr('data-id');
  $movie.remove();
  console.log('can you see me?'); // THIS WORKS
  var deleteURL = FIREBASE_URL.slice(0, -5) + '/' + $id + '.json';
  $.ajax({
    url: deleteURL,
    type: 'DELETE'
  });
  console.log(deleteURL); // THIS WORKS
});
/***********************************
 *********** TO HERE
 ************************************
 */
fb.onAuth(function (authData) {
  if (initLoad) {
    var onLoggedOut = $('.onLoggedOut');
    var onLoggedIn = $('.onLoggedIn');
    var onTempPassword = $('.onTempPassword');
    if (authData && authData.password.isTemporaryPassword) {
      // temporary log in
      onTempPassword.removeClass('hidden');
      onLoggedIn.addClass('hidden');
      onLoggedOut.addClass('hidden');
    } else if (authData) {
      // logged in
      onLoggedIn.removeClass('hidden');
      onLoggedOut.addClass('hidden');
      onTempPassword.addClass('hidden');
      $('.onLoggedIn h1').text('Hello ' + authData.password.email);
      movies = fb.child('users/' + fb.getAuth().uid + '/movies');
      movies.on('child_added', function (snapshot) {
        var obj = {};
        obj[snapshot.key()] = snapshot.val();
        addMovieToDom(obj);
      });
    } else {
      // on logged out
      onLoggedOut.removeClass('hidden');
      onLoggedIn.addClass('hidden');
      onTempPassword.addClass('hidden');
    }
  }
  initLoad = false;
});
/////////////////////////////////////THIS DOES NOT WORK
//# sourceMappingURL=data:application/json;base64,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LENBQUMsZ0JBQWdCLENBQUMsQ0FBQyxJQUFJLFlBQVUsUUFBUSxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUcsQ0FBQztBQUM3RCxZQUFNLEdBQUcsRUFBRSxDQUFDLEtBQUssWUFBVSxFQUFFLENBQUMsT0FBTyxFQUFFLENBQUMsR0FBRyxhQUFVLENBQUM7QUFDdEQsWUFBTSxDQUFDLEVBQUUsQ0FBQyxhQUFhLEVBQUUsVUFBVSxRQUFRLEVBQUU7QUFDM0MsWUFBSSxHQUFHLEdBQUcsRUFBRSxDQUFDO0FBQ2IsV0FBRyxDQUFDLFFBQVEsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxHQUFHLFFBQVEsQ0FBQyxHQUFHLEVBQUUsQ0FBQztBQUNyQyxxQkFBYSxDQUFDLEdBQUcsQ0FBQyxDQUFDO09BQ3BCLENBQUMsQ0FBQztLQUNKLE1BQU07O0FBRUwsaUJBQVcsQ0FBQyxXQUFXLENBQUMsUUFBUSxDQUFDLENBQUM7QUFDbEMsZ0JBQVUsQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLENBQUM7QUFDOUIsb0JBQWMsQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLENBQUM7S0FDbkM7R0FDRjtBQUNELFVBQVEsR0FBRyxLQUFLLENBQUM7Q0FDbEIsQ0FBQyxDQUFDIiwiZmlsZSI6InNyYy9qcy9zaGZiLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIEZJUkVCQVNFX1VSTCA9ICdodHRwczovL2VhbWRiLmZpcmViYXNlaW8uY29tLyc7XG52YXIgZmIgPSBuZXcgRmlyZWJhc2UoRklSRUJBU0VfVVJMKTtcbnZhciBtb3ZpZXM7IC8vIGluc3RhbnRpYXRlcyBhIHZhciBmb3IgYXBwZW5kaW5nIGNoaWxkcmVuIHRvIHRoZSBkb21cbnZhciBvbWRiX1VSTCA9ICdodHRwOi8vd3d3Lm9tZGJhcGkuY29tLz8nO1xudmFyICRzZWFyY2hGb3JtID0gJCgnLnNlYXJjaC1mb3JtJyk7XG52YXIgJHNlYXJjaEJhciA9ICQoJ2lucHV0W25hbWU9c2VhcmNoXScpWzBdO1xudmFyICRtb3ZpZURldGFpbHMgPSAkKFwiLm1vdmllLWRldGFpbHNcIik7XG52YXIgJHRhYmxlID0gJChcInRhYmxlXCIpO1xudmFyIGluaXRMb2FkID0gdHJ1ZTtcbnZhciBhdXRoRGF0YSA9IGZiLmdldEF1dGgoKTtcbnZhciBpbml0TG9hZCA9IHRydWU7XG4kKCcub25Mb2dnZWRJbiBmb3JtJykuc3VibWl0KGZ1bmN0aW9uICgpIHsgLy93aGVuIGxvZ2dlZCBpbiwgdGhpcyBpcyB0aGUgZm9ybSB3aGVyZSB1c2VycyBjYW4gd3JpdGUgdGhlIHVybHMgdG8gdGhlaXIgcGhvdG9zXG4gIHZhciB1cmwgPSAkKCcub25Mb2dnZWRJbiBpbnB1dFt0eXBlPVwidXJsXCJdJykudmFsKCk7IC8vdGhpcyBpcyB0aGUgdGV4dCBib3ggd2hlcmUgcGVvcGxlIGNhbiBpbnNlcnQgdGhlaXIgdXJsc1xuICBtb3ZpZXMucHVzaCh1cmwsIGZ1bmN0aW9uIChlcnIpIHsgLy9wb3N0cyB0aGUgcGhvdG8gdG8gZmlyZWJhc2VcbiAgICBjb25zb2xlLmxvZyhlcnIpO1xuICB9KVxuICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xufSk7XG4kKCcub25UZW1wUGFzc3dvcmQgZm9ybScpLnN1Ym1pdChmdW5jdGlvbiAoKSB7IC8vZnVuY3Rpb24gZm9yIGdldHRpbmcgYSB0ZW1wb3JhcnkgcGFzc3dvcmRcbiAgdmFyIGVtYWlsID0gZmIuZ2V0QXV0aCgpLnBhc3N3b3JkLmVtYWlsOyAvL21ha2luZyBzdXJlIHRoZSBlbWFpbCBhZGRyZXNzIGV4aXN0c1xuICB2YXIgb2xkUHcgPSAkKCcub25UZW1wUGFzc3dvcmQgaW5wdXQ6bnRoLWNoaWxkKDEpJykudmFsKCk7IC8vdGhlIHRlbXBvcmFyeSBwYXNzd29yZFxuICB2YXIgbmV3UHcgPSAkKCcub25UZW1wUGFzc3dvcmQgaW5wdXQ6bnRoLWNoaWxkKDIpJykudmFsKCk7IC8vdGhlIG5ldyB1c2VyLWdlbmVyYXRlZCBwYXNzd29yZFxuICBmYi5jaGFuZ2VQYXNzd29yZCh7XG4gICAgZW1haWw6IGVtYWlsLFxuICAgIG9sZFBhc3N3b3JkOiBvbGRQdyxcbiAgICBuZXdQYXNzd29yZDogbmV3UHdcbiAgfSwgZnVuY3Rpb24gKGVycikge1xuICAgIGlmIChlcnIpIHtcbiAgICAgIGFsZXJ0KGVyci50b1N0cmluZygpKTtcbiAgICB9IGVsc2Uge1xuICAgICAgZmIudW5hdXRoKCk7XG4gICAgfVxuICB9KTtcbiAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbn0pO1xuLy9yZXNldHRpbmcgYSBwYXNzd29yZFxuJCgnLmRvUmVzZXRQYXNzd29yZCcpLmNsaWNrKGZ1bmN0aW9uICgpIHtcbiAgdmFyIGVtYWlsID0gJCgnLm9uTG9nZ2VkT3V0IGlucHV0W3R5cGU9XCJlbWFpbFwiXScpLnZhbCgpO1xuICBmYi5yZXNldFBhc3N3b3JkKHtcbiAgICBlbWFpbDogZW1haWxcbiAgfSwgZnVuY3Rpb24gKGVycikge1xuICAgIGlmIChlcnIpIHtcbiAgICAgIGFsZXJ0KGVyci50b1N0cmluZygpKTtcbiAgICB9IGVsc2Uge1xuICAgICAgYWxlcnQoJ0NoZWNrIHlvdXIgZW1haWwhJyk7XG4gICAgfVxuICB9KTtcbn0pO1xuJChcIi5nb1RvTW92aWVzXCIpLmNsaWNrKGZ1bmN0aW9uICgpIHtcbiAgd2luZG93LmxvY2F0aW9uID0gXCJtb3ZpZXMuaHRtbFwiO1xufSk7XG4kKCcuZG9Mb2dvdXQnKS5jbGljayhmdW5jdGlvbiAoKSB7XG4gICAgZmIudW5hdXRoKGZ1bmN0aW9uICgpIHtcbiAgICAgIC8vIHdpbmRvdy5sb2NhdGlvbi5yZWxvYWQoKTtcbiAgICAgIHdpbmRvdy5sb2NhdGlvbi5ocmVmID0gd2luZG93LmxvY2F0aW9uLmhyZWY7XG4gICAgfSk7XG4gIH0pXG4gIC8vcmVnaXN0ZXJpbmcgYSBuZXcgdXNlclxuJCgnLmRvUmVnaXN0ZXInKS5jbGljayhmdW5jdGlvbiAoKSB7XG4gIHZhciBlbWFpbCA9ICQoJy5vbkxvZ2dlZE91dCBpbnB1dFt0eXBlPVwiZW1haWxcIl0nKS52YWwoKTtcbiAgdmFyIHBhc3N3b3JkID0gJCgnLm9uTG9nZ2VkT3V0IGlucHV0W3R5cGU9XCJwYXNzd29yZFwiXScpLnZhbCgpO1xuICBmYi5jcmVhdGVVc2VyKHtcbiAgICBlbWFpbDogZW1haWwsXG4gICAgcGFzc3dvcmQ6IHBhc3N3b3JkXG4gIH0sIGZ1bmN0aW9uIChlcnIsIHVzZXJEYXRhKSB7XG4gICAgaWYgKGVycikge1xuICAgICAgYWxlcnQoZXJyLnRvU3RyaW5nKCkpO1xuICAgIH0gZWxzZSB7XG4gICAgICBjbGVhckZvcm1zKCk7XG4gICAgICBkb0xvZ2luKGVtYWlsLCBwYXNzd29yZCwgZnVuY3Rpb24gKCkge1xuICAgICAgICB3aW5kb3cubG9jYXRpb24uaHJlZiA9IHdpbmRvdy5sb2NhdGlvbi5ocmVmO1xuICAgICAgfSk7XG4gICAgfVxuICB9KTtcbiAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbn0pO1xuLy9pZiBsb2dnZWQgb3V0LCB0aGlzIGZvcm0gY29tZXMgdXAgYW5kIGNhbiBsb2cgdXNlcnMgaW5cbiQoJy5vbkxvZ2dlZE91dCBmb3JtJykuc3VibWl0KGZ1bmN0aW9uICgpIHtcbiAgdmFyIGVtYWlsID0gJCgnLm9uTG9nZ2VkT3V0IGlucHV0W3R5cGU9XCJlbWFpbFwiXScpLnZhbCgpO1xuICB2YXIgcGFzc3dvcmQgPSAkKCcub25Mb2dnZWRPdXQgaW5wdXRbdHlwZT1cInBhc3N3b3JkXCJdJykudmFsKCk7XG4gIGRvTG9naW4oZW1haWwsIHBhc3N3b3JkLCBmdW5jdGlvbiAoKSB7XG4gICAgLy8gd2luZG93LmxvY2F0aW9uLnJlbG9hZCgpO1xuICAgIHdpbmRvdy5sb2NhdGlvbi5ocmVmID0gd2luZG93LmxvY2F0aW9uLmhyZWY7XG4gIH0pO1xuICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xufSk7XG4vL3RoaXMgZnVuY3Rpb24gaW5zZXJ0cyBlbXB0eSBzdHJpbmdzIGludG8gZm9ybXMgdXBvbiBiZWluZyBjYWxsZWRcbmZ1bmN0aW9uIGNsZWFyRm9ybXMoKSB7XG4gICQoJ2lucHV0W3R5cGU9XCJ0ZXh0XCJdLCBpbnB1dFt0eXBlPVwidXJsXCJdJykudmFsKCcnKTtcbn1cbmZ1bmN0aW9uIHNhdmVBdXRoRGF0YShhdXRoRGF0YSkgeyAvL2dpdmVzIHlvdSB0aGUgYXV0aERhdGEgb2JqZWN0IHRvIHdvcmsgd2l0aFxuICB2YXIgcmVmID0gZmIuY2hpbGQoYHVzZXJzLyR7YXV0aERhdGEudWlkfS9wcm9maWxlYCk7XG4gIHJlZi5zZXQoYXV0aERhdGEpO1xuICBjb25zb2xlLmxvZyhhdXRoRGF0YSk7XG59XG5mdW5jdGlvbiBkb0xvZ2luKGVtYWlsLCBwYXNzd29yZCwgY2IpIHtcbiAgICBmYi5hdXRoV2l0aFBhc3N3b3JkKHtcbiAgICAgIGVtYWlsOiBlbWFpbCxcbiAgICAgIHBhc3N3b3JkOiBwYXNzd29yZFxuICAgIH0sIGZ1bmN0aW9uIChlcnIsIGF1dGhEYXRhKSB7XG4gICAgICBpZiAoZXJyKSB7XG4gICAgICAgIGFsZXJ0KGVyci50b1N0cmluZygpKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHNhdmVBdXRoRGF0YShhdXRoRGF0YSk7XG4gICAgICAgIHR5cGVvZiBjYiA9PT0gJ2Z1bmN0aW9uJyAmJiBjYihhdXRoRGF0YSk7XG4gICAgICB9Y29uc29sZS5sb2coYXV0aERhdGEpO1xuICAgIH0pO1xuICB9XG4gIC8qXG4gICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXG4gICoqKioqKioqKioqIEZST00gSEVSRVxuICAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuICBmdW5jdGlvbiBhZGRNb3ZpZVRvRG9tIChwaG90bykge1xuICAgIGlmIChwaG90bykge1xuICAgICAgdmFyIHV1aWQgPSBPYmplY3Qua2V5cyhwaG90bylbMF07XG4gICAgICAkKGA8aW1nIHNyYz1cIiR7cGhvdG9bdXVpZF19XCIgZGF0YS11aWQ9XCIke3V1aWR9XCI+YCkuYXBwZW5kVG8oJCgnLmZhdkZvdG9zJykpO1xuICAgIH1cbiAgfSovXG5cblxuLy9mdW5jdGlvbiB0byBnZXQgZmlyZWJhc2UgZGF0YSBhbmQgYWRkIHRvIHRhYmxlIG9uIHBhZ2UgbG9hZFxuLy8kLmdldChGSVJFQkFTRV9VUkwsIGZ1bmN0aW9uIChkYXRhKSB7XG4kLmdldChhdXRoRGF0YSwgZnVuY3Rpb24gKGRhdGEpIHtcbiAgY29uc29sZS5sb2coYXV0aERhdGEpO1xuICBpZiAoZGF0YSA9PT0gbnVsbCkge1xuICAgICR0YWJsZS5oaWRlKCk7IC8vaGlkZXMgdGFibGUgaWYgZmlyZWJhc2UgaXMgZW1wdHlcbiAgfSBlbHNlIHtcbiAgICBPYmplY3Qua2V5cyhkYXRhKS5mb3JFYWNoKGZ1bmN0aW9uIChpZCkge1xuICAgICAgYWRkVGFibGVEZXRhaWwoZGF0YVtpZF0sIGlkKTtcbiAgICB9KTtcbiAgICBjb25zb2xlLmxvZyhkYXRhKSAvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vVEhJUyBET0VTIE5PVCBXT1JLXG4gIH1cbn0pO1xuLy9mdW5jdGlvbiB0byByZXRyaWV2ZSBtb3ZpZSBKU09OIGZpbGUgYW5kIGFkZCB0byBodG1sIC8vLy8gVEhJUyBXT1JLU1xuJHNlYXJjaEZvcm0ub24oJ3N1Ym1pdCcsIGZ1bmN0aW9uICgpIHtcbiAgdmFyIG1vdmllID0gJHNlYXJjaEJhci52YWx1ZTtcbiAgdmFyIHVybCA9IG9tZGJfVVJMICsgXCJ0PVwiICsgbW92aWUgKyBcIiZyPWpzb25cIjtcbiAgY29uc29sZS5sb2codXJsKTsvLyAgVEhJUyBXT1JLRURcbiAgJC5nZXQodXJsLCBmdW5jdGlvbiAoZGF0YSkge1xuICAgIGFkZE1vdmllRGV0YWlsKGRhdGEpO1xuICB9KTtcbiAgcmV0dXJuIGZhbHNlO1xufSk7XG4vL2Z1bmN0aW9uIHRvIGFkZCBKU09OIGRhdGEgdG8gaHRtbCAvLy8vIFRISVMgV09SS1NcbmZ1bmN0aW9uIGFkZE1vdmllRGV0YWlsKGRhdGEpIHtcbiAgdmFyICR0YXJnZXQgPSAkKFwiLm1vdmllLWRldGFpbHNcIik7XG4gIGlmIChkYXRhLlRpdGxlID09PSB1bmRlZmluZWQpIHtcbiAgICAkdGFyZ2V0LmVtcHR5KCk7XG4gICAgJHRhcmdldC5hcHBlbmQoXCI8aDI+U29ycnksIG5ldmVyIGhlYXJkIG9mIGl0ITwvaDI+XCIpO1xuICB9IGVsc2Uge1xuICAgIHZhciBwb3N0ZXIgPSBkYXRhLlBvc3RlciA9PT0gXCJOL0FcIiA/IFwiaHR0cDovL2kuaW1ndXIuY29tL3JYdVFpQ20uanBnPzFcIiA6IGRhdGEuUG9zdGVyO1xuICAgICR0YXJnZXQuZW1wdHkoKTtcbiAgICAkdGFyZ2V0LmFwcGVuZChcIjxpbWcgc3JjPVwiICsgcG9zdGVyICsgXCI+PC9pbWc+XCIpO1xuICAgICR0YXJnZXQuYXBwZW5kKFwiPGgxPlwiICsgZGF0YS5UaXRsZSArIFwiPC9oMT5cIik7XG4gICAgJHRhcmdldC5hcHBlbmQoXCI8aDI+IFllYXI6IFwiICsgZGF0YS5ZZWFyICsgXCI8L2gyPlwiKTtcbiAgICAkdGFyZ2V0LmFwcGVuZChcIjxoMj4gSU1EQiBSYXRpbmc6IFwiICsgZGF0YS5pbWRiUmF0aW5nICsgXCI8L2gyPlwiKTtcbiAgICAkdGFyZ2V0LmFwcGVuZChcIjxidXR0b24gY2xhc3M9J2J0biBidG4tZGVmYXVsdCBidG4teHMgYWRkLW1vdmllJz5BZGQgTW92aWU8L2J1dHRvbj5cIik7XG4gIH1cbn1cbi8vcG9zdHMgbW92aWUgb2JqZWN0IHRvIGZpcmViYXNlIGFuZCBjYWxscyBhZGRUYWJsZURldGFpbCgpXG4kbW92aWVEZXRhaWxzLm9uKCdjbGljaycsICcuYWRkLW1vdmllJywgZnVuY3Rpb24gKCkge1xuICAvL25vdGU6IG11c3QgYmUgaW4gdGhpcyBmb3JtYXQgYmVjYXVzZSB0aGUgLmFkZC1tb3ZpZSBidXR0b24gaXMgZHluYW1pY2FsbHkgY3JlYXRlZFxuICB2YXIgbW92aWUgPSAkc2VhcmNoQmFyLnZhbHVlO1xuICB2YXIgdXJsID0gb21kYl9VUkwgKyBcInQ9XCIgKyBtb3ZpZSArIFwiJnI9anNvblwiO1xuICB2YXIgdG9rZW4gPSBmYi5nZXRBdXRoKCkudG9rZW47XG4gIGNvbnNvbGUubG9nKHVybCk7IC8vICB0aGlzIHdvcmtlZFxuICB2YXIgcmVmID0gRklSRUJBU0VfVVJMICsgJ3VzZXJzLycgKyBhdXRoRGF0YS51aWQgKyAnL21vdmllcy5qc29uP2F1dGg9JyArIGF1dGhEYXRhLnRva2VuO1xuICBjb25zb2xlLmxvZyhyZWYpOyAvLyAgd29ya3NcbiAgJC5nZXQodXJsLCBmdW5jdGlvbiAoZGF0YSkge1xuICAgICQucG9zdChyZWYsIEpTT04uc3RyaW5naWZ5KGRhdGEpLCBmdW5jdGlvbiAocmVzKSB7XG4gICAgICBhZGRUYWJsZURldGFpbChkYXRhLCByZXMubmFtZSk7XG4gICAgICBjb25zb2xlLmxvZyhhZGRUYWJsZURldGFpbCk7Ly8vLy8vLy8vIFRoaXMgd29ya3MuIEhvbHkgZnVjay5cbiAgICB9KTtcbiAgfSwgJ2pzb25wJyk7XG59KTtcbi8vZnVuY3Rpb24gdG8gYXBwZW5kIGEgcm93IHRvIHRoZSB0YWJsZVxuZnVuY3Rpb24gYWRkVGFibGVEZXRhaWwoZGF0YSwgaWQpIHtcbiAgJHRhYmxlLnNob3coKTtcbiAgJHRhYmxlLmFwcGVuZChcIjx0ciBjbGFzcz0naGlkZS1yb3dzJz48L3RyPlwiKTtcbiAgdmFyICR0YXJnZXQgPSAkKFwidHI6bGFzdFwiKTtcbiAgY29uc29sZS5sb2coJ2RpZCB0aGlzIHNob3cgdXA/JykgLy9kb2VzIG5vdCBmdWNraW5nIHdvcmtcbiAgJHRhcmdldC5hdHRyKFwiZGF0YS1pZFwiLCBpZCk7XG4gIHZhciBwb3N0ZXIgPSBkYXRhLlBvc3RlciA9PT0gXCJOL0FcIiA/IFwiaHR0cDovL2kuaW1ndXIuY29tL3JYdVFpQ20uanBnPzFcIiA6IGRhdGEuUG9zdGVyO1xuICAkdGFyZ2V0LmFwcGVuZChcIjx0ZCBjbGFzcz1cXFwicG9zdGVyXFxcIj48aW1nIHNyYz1cIiArIHBvc3RlciArIFwiPjwvaW1nPjwvdGQ+XCIpO1xuICAkdGFyZ2V0LmFwcGVuZChcIjx0ZCBjbGFzcz1cXFwidGl0bGVcXFwiPlwiICsgZGF0YS5UaXRsZSArIFwiPC90ZD5cIik7XG4gICR0YXJnZXQuYXBwZW5kKFwiPHRkIGNsYXNzPVxcXCJ5ZWFyXFxcIj5cIiArIGRhdGEuWWVhciArIFwiPC90ZD5cIik7XG4gICR0YXJnZXQuYXBwZW5kKFwiPHRkIGNsYXNzPVxcXCJyYXRpbmdcXFwiPlwiICsgZGF0YS5pbWRiUmF0aW5nICsgXCI8L3RkPlwiKTtcbiAgJHRhcmdldC5hcHBlbmQoXCI8dGQ+PGJ1dHRvbiBjbGFzcz0nYnRuIGJ0bi1kZWZhdWx0IGJ0bi14cyc+XCIgKyBcIiZuYnNwO1gmbmJzcDtcIiArIFwiPC9idXR0b24+PC90ZD5cIik7XG59XG4vL2RlbGV0ZXMgcm93IGZyb20gdGFibGUgYW5kIGZpcmViYXNlXG4kdGFibGUub24oJ2NsaWNrJywgJ2J1dHRvbicsIGZ1bmN0aW9uICgpIHtcbiAgdmFyICRtb3ZpZSA9ICQodGhpcykuY2xvc2VzdCgndHInKTtcbiAgdmFyICRpZCA9ICRtb3ZpZS5hdHRyKCdkYXRhLWlkJyk7XG4gICRtb3ZpZS5yZW1vdmUoKTtcbiAgY29uc29sZS5sb2coJ2NhbiB5b3Ugc2VlIG1lPycpOy8vIFRISVMgV09SS1NcbiAgdmFyIGRlbGV0ZVVSTCA9IEZJUkVCQVNFX1VSTC5zbGljZSgwLCAtNSkgKyAnLycgKyAkaWQgKyAnLmpzb24nO1xuICAkLmFqYXgoe1xuICAgIHVybDogZGVsZXRlVVJMLFxuICAgIHR5cGU6ICdERUxFVEUnXG4gIH0pO1xuICBjb25zb2xlLmxvZyhkZWxldGVVUkwpOy8vIFRISVMgV09SS1Ncbn0pO1xuLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXG4gKioqKioqKioqKiogVE8gSEVSRVxuICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuICovXG5mYi5vbkF1dGgoZnVuY3Rpb24gKGF1dGhEYXRhKSB7XG4gIGlmIChpbml0TG9hZCkge1xuICAgIHZhciBvbkxvZ2dlZE91dCA9ICQoJy5vbkxvZ2dlZE91dCcpO1xuICAgIHZhciBvbkxvZ2dlZEluID0gJCgnLm9uTG9nZ2VkSW4nKTtcbiAgICB2YXIgb25UZW1wUGFzc3dvcmQgPSAkKCcub25UZW1wUGFzc3dvcmQnKTtcbiAgICBpZiAoYXV0aERhdGEgJiYgYXV0aERhdGEucGFzc3dvcmQuaXNUZW1wb3JhcnlQYXNzd29yZCkge1xuICAgICAgLy8gdGVtcG9yYXJ5IGxvZyBpblxuICAgICAgb25UZW1wUGFzc3dvcmQucmVtb3ZlQ2xhc3MoJ2hpZGRlbicpO1xuICAgICAgb25Mb2dnZWRJbi5hZGRDbGFzcygnaGlkZGVuJyk7XG4gICAgICBvbkxvZ2dlZE91dC5hZGRDbGFzcygnaGlkZGVuJyk7XG4gICAgfSBlbHNlIGlmIChhdXRoRGF0YSkge1xuICAgICAgLy8gbG9nZ2VkIGluXG4gICAgICBvbkxvZ2dlZEluLnJlbW92ZUNsYXNzKCdoaWRkZW4nKTtcbiAgICAgIG9uTG9nZ2VkT3V0LmFkZENsYXNzKCdoaWRkZW4nKTtcbiAgICAgIG9uVGVtcFBhc3N3b3JkLmFkZENsYXNzKCdoaWRkZW4nKTtcbiAgICAgICQoJy5vbkxvZ2dlZEluIGgxJykudGV4dChgSGVsbG8gJHthdXRoRGF0YS5wYXNzd29yZC5lbWFpbH1gKTtcbiAgICAgIG1vdmllcyA9IGZiLmNoaWxkKGB1c2Vycy8ke2ZiLmdldEF1dGgoKS51aWR9L21vdmllc2ApO1xuICAgICAgbW92aWVzLm9uKCdjaGlsZF9hZGRlZCcsIGZ1bmN0aW9uIChzbmFwc2hvdCkge1xuICAgICAgICB2YXIgb2JqID0ge307XG4gICAgICAgIG9ialtzbmFwc2hvdC5rZXkoKV0gPSBzbmFwc2hvdC52YWwoKTtcbiAgICAgICAgYWRkTW92aWVUb0RvbShvYmopO1xuICAgICAgfSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIG9uIGxvZ2dlZCBvdXRcbiAgICAgIG9uTG9nZ2VkT3V0LnJlbW92ZUNsYXNzKCdoaWRkZW4nKTtcbiAgICAgIG9uTG9nZ2VkSW4uYWRkQ2xhc3MoJ2hpZGRlbicpO1xuICAgICAgb25UZW1wUGFzc3dvcmQuYWRkQ2xhc3MoJ2hpZGRlbicpO1xuICAgIH1cbiAgfVxuICBpbml0TG9hZCA9IGZhbHNlO1xufSk7XG4iXX0=
